#include <iostream>
#include<queue>
using namespace std;

class Node{
  int data;
  Node* left;
  Node* right;

  Node(int data){
    this->data=data;
    this->left=NULL;
    this->right=NULL;
  }

};

void levelorder(Node* root){

  queue<Node*>q;
  q.push(root);
  q.push(NULL);

  while(!q.empty()){

    Node* temp=q.front();
    q.pop();

    if(!temp){
      cout<<endl;
      if(!q.empty()) q.push(NULL);
    }
    else{
     cout<<temp->data<<" ";
     if(temp->left) q.push(temp->left);
     if(temp->right) q.push(temp->right);
    }

  }

}

void createBST(Node* &root){
    int data;
    cout<<"enter data: ";
    cin>>data;
    
    while(data!=-1){
      root= insertBST(root, data);
      cout<<"enter data: ";
      cin>>data;
    }

}

Node* insertBST(Node* root, int data){
  if(root==NULL){
    root=new Node(data);
    return root;
  }

  if(data > root->data){
    root->right= insertBST(root->right, data);
  }else{
    root->left= insertBST(root->left, data);
  }
  
  return root;
}

int main() {
  
  Node* root=NULL;
  createBST(root);

  levelorder(root);

  return 0;
}
